<project name='cocker' default='all'>

   <property file='build.properties' />
   <property name='PRO' value='/pro' />
   <property name='IVYBIN' value='${PRO}/ivy/java' />
   <property name='COCKER' value='${PRO}/cocker' />

   <available file="./build.properties" type='file' property='setup.done' />
   <path id='setuppath'>
      <pathelement location='..' />
   </path>
   <path id='cockerpath'>
      <pathelement location='.' />
   </path>
   <property name='setupfile' refid='setuppath' />
   <property name='cockerfile' refid='cockerpath' />
   <target name='setup' unless='setup.done'>
      <echo file='./build.properties' message="PRO=${setupfile}${line.separator}" />
      <echo file='./build.properties' message='COCKER=${cockerfile}${line.separator}' append='true' />
      <mkdir dir='./java/edu/brown/cs/cocker' />
      <property name='PRO' value='{setupfile}' />
      <property name='COCKER' value='{cockerfile}' />
   </target>

   <target name='all' depends='compile'>
   </target>

   <path id='cocker.classpath'>
      <pathelement location='java' />
      <pathelement location='lib/ivy.jar' />
      <pathelement location='lib/asm6.jar'/>
      <pathelement location='lib/postgresql.jar' />
      <pathelement location='lib/commons-io-2.4.jar'/>
      <fileset dir='lib/eclipsejar' includes='*.jar' />
      <fileset dir='lib' includes='commons-logging*.jar' />
      <fileset dir='lib' includes='commons-el*jar' />
      <fileset dir='lib' includes='jtar*.jar' />
      <fileset dir='lib' includes='lucene*.jar' />
   </path>

   <target name='clean'>
     <delete dir='java'/>
   </target>

   <target name='compile' depends='setup' >
      <mkdir dir='java' />
      <javac srcdir='javasrc' destdir='java' debug='on' deprecation='on' includeantruntime='false'>
	 <classpath refid='cocker.classpath' />
      </javac>
   </target>

   <path id='jdocsrc'>
      <pathelement location='./javasrc' />
      <pathelement location='${PRO}/ivy/javasrc' />
    </path>

   <target name='doc'>
      <ant antfile='build.xml' dir='javasrc' target='doc' />
      <zip zipfile='lib/apidoc.zip' basedir='doc' />
   </target>

   <target name='stop'>
      <java classname='edu.brown.cs.cocker.application.ApplicationServerRegulation'
		fork='true'>
	  <classpath refid='cocker.classpath' />
	  <arg value='-stop' />
      </java>
   </target>

   <target name='kill'>
      <java classname='edu.brown.cs.cocker.application.ApplicationServerRegulation'
		fork='true'>
	  <classpath refid='cocker.classpath' />
	  <arg value='-kill' />
      </java>
   </target>

   <target name='start'>
      <java classname='edu.brown.cs.cocker.application.ApplicationServerRegulation'
		fork='true'>
	  <classpath refid='cocker.classpath' />
	  <arg value='-start' />
      </java>
   </target>

   <target name='status'>
      <java classname='edu.brown.cs.cocker.application.ApplicationServerRegulation'
		fork='true'>
	  <classpath refid='cocker.classpath' />
	  <arg value='-talk' />
      </java>
   </target>

   <target name='opt'>
      <java classname='edu.brown.cs.cocker.application.ApplicationServerRegulation'
		fork='true'>
	  <classpath refid='cocker.classpath' />
	  <arg value='-opt' />
      </java>
   </target>

   <target name='merobase'>
      <java classname='edu.brown.cs.cocker.application.ApplicationServerRegulation'
		fork='true'>
	  <classpath refid='cocker.classpath' />
	  <arg value='-m' />
	  <arg value='/data/people/qx5/merobase-java.zip' />
      </java>
   </target>

   <target name='clear'>
      <java classname='edu.brown.cs.cocker.application.ApplicationSetupDatabase'
		fork='true'>
	  <classpath refid='cocker.classpath' />
	  <arg value='-new' />
      </java>
   </target>

   <target name='bubbles' depends='all'>
      <jar destfile='cocker.jar'>
	 <manifest>
	    <attribute name='Main-Class' value='edu.brown.cs.cocker.cocker.CockerServer' />
	 </manifest>
	 <fileset dir='./java' includes='**/*.class' />
	 <zipfileset src='${COCKER}/lib/commons-logging-1.1.1.jar' excludes='META-INF/*' />
	 <zipfileset src='${COCKER}/lib/commons-el.jar' excludes='META-INF/*' />
	 <zipfileset src='${COCKER}/lib/commons-io-2.4.jar' excludes='META-INF/*' />
	 <zipfileset src='${COCKER}/lib/lucene-analyzers-common-5.0.0.jar' excludes='META-INF/*' />
	 <zipfileset src='${COCKER}/lib/lucene-core-5.0.0.jar' excludes='META-INF/*' />
	 <zipfileset src='${COCKER}/lib/lucene-queries-5.0.0.jar' excludes='META-INF/*' />
	 <zipfileset src='${COCKER}/lib/lucene-queryparser-5.0.0.jar' excludes='META-INF/*' />
      </jar>
   </target>

</project>
